apiVersion: apps/v1
kind: Deployment
metadata:
  name: val-api
  namespace: val-api
spec:
  replicas: 2
  selector:
    matchLabels: { app: val-api }
  template:
    metadata:
      labels: { app: val-api }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: api
          image: ghcr.io/valerii-bodnarchuk/devOps/val-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef: { name: val-api-config }
            - secretRef:    { name: val-api-secrets }
          readinessProbe:
            httpGet: { path: /health, port: 3000 }
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: /health, port: 3000 }
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 3
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      # если образ приватный в GHCR:
      imagePullSecrets:
        - name: ghcr-pull
